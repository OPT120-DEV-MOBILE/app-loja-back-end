// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}



model Roles {
  id                Int               @id @default(autoincrement())
  nome              String            @unique

  Usuario Usuario[]
  
  @@map("roles")
}


model Empresa {
  id              Int         @id @default(autoincrement())
  nome            String
  tipoDocumento   String
  numeroDocumento String      @unique
  cep             String?
  endereco        String?
  cidade          String?
  estado          String?

  Usuario Usuario[]

  @@map("empresa")
}


model Usuario {
  id                  Int             @id @default(autoincrement())
  idEmpresa           Int?
  nome                String
  senha               String
  email               String          @unique
  roles               Int
  cpf                 String          @unique
  quantidadeDeCompras Int?            @default(0)

  role              Roles             @relation(fields: [roles], references: [id])
  empresa           Empresa?          @relation(fields: [idEmpresa], references: [id])

  VendaCliente Venda[] @relation(name: "VendaCliente")
  VendaFuncionario Venda[] @relation(name: "VendaFuncionario")

  @@map("usuario")
}


model Produto {
  id                Int         @id @default(autoincrement())
  nome              String
  preco             Float
  descricao         String
  quantidade        Int
  dataDeFabricacao  DateTime?
  dataDeValidade    DateTime?

  ProdutoVenda ProdutoVenda[]
  
  @@map("produto")
}



model Venda {
  id              Int         @id @default(autoincrement())
  idUsuario       Int
  idCliente       Int
  precoTotal      Float
  parcelas        Int?
  precoParcelado  Float?
  codigoDesconto  String?

  Funcionario Usuario @relation(name: "VendaFuncionario", fields: [idUsuario], references: [id])
  Cliente Usuario @relation(name: "VendaCliente", fields: [idCliente], references: [id])

  ProdutoVenda ProdutoVenda[]

  @@map("venda")
}


model ProdutoVenda {
  id            Int     @id @default(autoincrement())
  idVenda       Int
  idProduto     Int
  precoProduto  Float
  quantidade    Int

  Venda   Venda   @relation(fields: [idVenda], references: [id], onDelete: Cascade)
  Produto Produto @relation(fields: [idProduto], references: [id])

  @@map("produto_venda")
}
